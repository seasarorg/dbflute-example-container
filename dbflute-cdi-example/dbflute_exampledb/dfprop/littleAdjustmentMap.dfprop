# /---------------------------------------------------------------------------
# littleAdjustmentMap: (NotRequired - Default map:{})
#
# The various settings about a little adjustment.
# 
# o isAvailableAddingSchemaToTableSqlName: (NotRequired - Default false)
# o isAvailableAddingCatalogToTableSqlName: (NotRequired - Default false)
# o isAvailableDatabaseDependency: (NotRequired - Default false)
# o isAvailableDatabaseNativeJDBC: (NotRequired - Default false)
# o isAvailableNonPrimaryKeyWritable: (NotRequired - Default false)
# o isCheckSelectedClassification: (NotRequired - Default false)
# o isForceClassificationSetting: (NotRequired - Default false)
# o isMakeEntityChaseRelation: (NotRequired - Default false)
# o isEntityConvertEmptyStringToNull: (NotRequired - Default false)
# o isMakeConditionQueryEqualEmptyString: (NotRequired - Default false)
# o isMakeDeprecated: (NotRequired - Default false)
# o isMakeRecentlyDeprecated: (NotRequired - Default true)
# o extendedImplementedInvokerAssistantClass: (NotRequired - Default '')
# o extendedImplementedCommonColumnAutoSetupperClass: (NotRequired - Default '')
# o extendedS2DaoSettingClass: (NotRequired - Default '')
# o shortCharHandlingMode: (NotRequired - Default NONE)
# o quoteTableNameList: (NotRequired - Default list:{})
# o quoteColumnNameList: (NotRequired - Default list:{})
# 
# *The line that starts with '#' means comment-out.
#
map:{
    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isAvailableAddingSchemaToTableSqlName: (NotRequired - Default false)
    #   [true]
    #     Add schema to table SQL name. (The table name on query is SCHEMA.TABLE)
    #
    #   [false]
    #     Non.
    #
    #; isAvailableAddingSchemaToTableSqlName = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isAvailableAddingCatalogToTableSqlName: (NotRequired - Default false)
    #   [true]
    #     Add catalog to table SQL name. (The table name on query is CATALOG.SCHEMA.TABLE)
    #     This property works only when isAvailableAddingSchemaToTableSqlName is true.
    #
    #   [false]
    #     Non.
    #
    #; isAvailableAddingCatalogToTableSqlName = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isAvailableDatabaseDependency: (NotRequired - Default false)
    #   [true]
    #     Generate the method that depends on the database.
    #     For example: cb.lockWithRR() at DB2.
    #
    #   [false]
    #     Non.
    #
    #; isAvailableDatabaseDependency = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isAvailableDatabaseNativeJDBC: (NotRequired - Default false)
    #   [true]
    #     Use classes of database native JDBC on generated classes
    #     to get best performances of DB access.
    #     Your project needs to refer to database native JDBC.
    #
    #   [false]
    #     Non.
    #
    #; isAvailableDatabaseNativeJDBC = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isAvailableNonPrimaryKeyWritable: (NotRequired - Default false)
    #   [true]
    #     Generate writable methods at non-primary-key table.
    #
    #   [false]
    #     Non.
    #
    #; isAvailableNonPrimaryKeyWritable = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isCheckSelectedClassification: (NotRequired - Default false)
    #   [true]
    #     Check a code of a column related to classification
    #     whether it's one of classification when it's selected.
    #     If wrong, throws an exception (when selecting).
    #
    #   [false]
    #     Non.
    #
    #; isCheckSelectedClassification = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isForceClassificationSetting: (NotRequired - Default false)
    #   [true]
    #     Force developer to set a code of a column related to classification
    #     by classification type-safe method of Entity and ConditionBean.
    #     A setter method of original type becomes 'protected' scope.
    #
    #   [false]
    #     Non.
    #
    #; isForceClassificationSetting = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isMakeEntityChaseRelation: (NotRequired - Default false)
    #   [true]
    #     Make chase-relation methods of entity.
    #     For example: member.chaseMemberStatus().getMemberStatusName()
    #     This statement doesn't have a null pointer if the MemberStatus doesn't exist.
    #
    #   [false]
    #     Non.
    #
    #; isMakeEntityChaseRelation = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isEntityConvertEmptyStringToNull: (NotRequired - Default false)
    #   [true]
    #     Convert empty-string data to null in entity.
    #
    #   [false]
    #     Non.
    #
    #; isEntityConvertEmptyStringToNull = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isMakeConditionQueryEqualEmptyString: (NotRequired - Default false)
    #   [true]
    #     Make equal-empty-string methods of condition-query.
    #     For example: cb.query().setMemberName_Equal_EmptyString()
    #
    #   [false]
    #     Non.
    #
    #; isMakeConditionQueryEqualEmptyString = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isMakeDeprecated: (NotRequired - Default false)
    #   [true]
    #     Make deprecated method and class and so on...
    #     *You should specify this property 'false'!
    #
    #   [false]
    #     Non.
    #
    #; isMakeDeprecated = false
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o isMakeRecentlyDeprecated: (NotRequired - Default true)
    #   [true]
    #     Make RECENTLY deprecated method and class and so on...
    #     *You should specify this property 'false'!
    #
    #   [false]
    #     Non.
    #
    #; isMakeRecentlyDeprecated = true
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o extendedImplementedInvokerAssistantClass: (NotRequired - Default '')
    #  If you want to extend the embedded invoker assistant,
    #  specify the class name of your original invoker assistant
    #  that extends the embedded one.
    #  *Basically you SHOULD NOT specify this property!
    #
    # @JavaOnly
    #; extendedImplementedInvokerAssistantClass = com.example.ExtendedImplementedInvokerAssistant
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o extendedImplementedCommonColumnAutoSetupperClass: (NotRequired - Default '')
    #  If you want to extend the embedded common column auto setupper,
    #  specify the class name of your original common column auto setupper
    #  that extends the embedded one.
    #  *Basically you SHOULD NOT specify this property!
    #
    # @JavaOnly
    #; extendedImplementedCommonColumnAutoSetupperClass = com.example.ExtendedImplementedCommonColumnAutoSetupper
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o extendedS2DaoSettingClass: (NotRequired - Default '')
    #  If you want to extend the embedded S2Dao setting,
    #  specify the class name of your original S2Dao setting
    #  that extends the embedded one.
    #  *Basically you SHOULD NOT specify this property!
    #
    # @CSharpOnly
    #; extendedS2DaoSettingClass = Com.Example.ExtendedS2DaoSetting
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o shortCharHandlingMode: (NotRequired - Default NONE)
    #  If the parameter of condition-bean or parameter-bean has short size,
    #   NONE - Do nothing. (default)
    #   EXCEPTION - It throws an exception.
    #   RFILL - It fills the parameter by right spaces.
    #   LFILL - It fills the parameter by left spaces.
    #
    #; shortCharHandlingMode = NONE
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o quoteTableNameList: (NotRequired - Default list:{})
    #  The list of table DB names that need to be quoted.
    #  Specified tables is quoted on auto-generated SQL.
    #
    #; quoteTableNameList = list:{}
    # - - - - - - - - - -/

    # /- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # o quoteColumnNameList: (NotRequired - Default list:{})
    #  The list of column DB names that need to be quoted.
    #  Specified columns is quoted on auto-generated SQL.
    #
    #; quoteColumnNameList = list:{}
    # - - - - - - - - - -/
}
# ----------------/